name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          echo $(aws ecr get-login-password --region ${{ secrets.AWS_REGION }}) | docker login --username AWS --password-stdin 866934333672.dkr.ecr.us-west-2.amazonaws.com

      - name: Build Docker image using Docker Compose and capture the image ID
        run: |
          docker-compose build
          IMAGE_ID=$(docker images -q $(docker-compose config --services))
          echo "Built Image ID: $IMAGE_ID"
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV

      - name: Tag and push the image using the captured ID
        run: |
          export IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          docker tag $IMAGE_ID 866934333672.dkr.ecr.us-west-2.amazonaws.com/dharan-snehith-app:$IMAGE_TAG
          docker push 866934333672.dkr.ecr.us-west-2.amazonaws.com/dharan-snehith-app:$IMAGE_TAG

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Set up EKS cluster context
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name dharan-cluster

      - name: Update Kubernetes deployment
        run: |
          kubectl set image deployment/flask-app flask-app=866934333672.dkr.ecr.us-west-2.amazonaws.com/dharan-snehith-app:$IMAGE_TAG --record

      - name: Verify deployment
        run: kubectl rollout status deployment/flask-app
